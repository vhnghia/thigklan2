{"version":3,"sources":["components/create.component.js","components/edit.component.js","components/TableRow.js","components/index.component.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Create","props","onChangeName","bind","onChangeCompany","onChangeAge","onSubmit","state","name","company","age","e","this","setState","target","value","preventDefault","obj","axios","post","then","res","console","log","data","style","marginTop","className","type","onChange","Component","Edit","get","match","params","id","response","Item","catch","error","history","push","align","TableRow","delete","idPerson","err","to","onClick","Index","onChangeValue","find","persons","alert","map","object","i","colSpan","tabRow","NotFound","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.caab69b8.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\nexport default class Create extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeName = this.onChangeName.bind(this);\n        this.onChangeCompany = this.onChangeCompany.bind(this);\n        this.onChangeAge = this.onChangeAge.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            name: '',\n            company: '',\n            age:''\n        }\n    }\n\n    onChangeName(e) {\n        this.setState({\n            name: e.target.value\n        });\n    }\n\n    onChangeCompany(e) {\n        this.setState({\n            company: e.target.value\n        });\n    }\n\n    onChangeAge(e) {\n        this.setState({\n            age: e.target.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const obj = {\n            name: this.state.name,\n            company: this.state.company,\n            age: this.state.age\n        };\n        axios.post('http://localhost:4000/persons/add', obj)\n            .then(res => console.log(res.data));\n\n        this.setState({\n            name: '',\n            company: '',\n            age: ''\n        })\n    }\n\n    render() {\n        return (\n            <div style={{marginTop: 10}}>\n                <h3>Add New Person</h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Person Name: </label>\n                        <input type=\"text\" className=\"form-control\"\n                               value={this.state.name}\n                               onChange={this.onChangeName}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Company Name: </label>\n                        <input type=\"text\" className=\"form-control\" value={this.state.company}\n                               onChange={this.onChangeCompany}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Age: </label>\n                        <input type=\"text\" className=\"form-control\" value={this.state.age}\n                               onChange={this.onChangeAge}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Register Person\" className=\"btn btn-primary\"/>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class Edit extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeName = this.onChangeName.bind(this);\n        this.onChangeCompany  = this.onChangeCompany.bind(this);\n        this.onChangeAge = this.onChangeAge.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            name: '',\n            company: '',\n            age:''\n        }\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:4000/persons/edit/'+this.props.match.params.id)\n            .then(response => {\n                this.setState({\n                    name: response.data.Item.name,\n                    company: response.data.Item.company,\n                    age: response.data.Item.age });\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    onChangeName(e) {\n        this.setState({\n            name: e.target.value\n        });\n    }\n    onChangeCompany(e) {\n        this.setState({\n            company: e.target.value\n        })\n    }\n    onChangeAge(e) {\n        this.setState({\n            age: e.target.value\n        })\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const obj = {\n            name: this.state.name,\n            company: this.state.company,\n            age: this.state.age\n        };\n        axios.post('http://localhost:4000/persons/update/'+this.props.match.params.id, obj)\n            .then(res => console.log(res.data));\n\n\n        this.props.history.push('/index');\n    }\n\n    render() {\n        return (\n            <div style={{ marginTop: 10 }}>\n                <h3 align=\"center\">Update Person Info</h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Person Name:  </label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={this.state.name}\n                            onChange={this.onChangeName}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Company Name: </label>\n                        <input type=\"text\"\n                               className=\"form-control\"\n                               value={this.state.company}\n                               onChange={this.onChangeCompany}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Age: </label>\n                        <input type=\"text\"\n                               className=\"form-control\"\n                               value={this.state.age}\n                               onChange={this.onChangeAge}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"submit\"\n                               value=\"Update Person Info\"\n                               className=\"btn btn-primary\"/>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nclass TableRow extends Component {\n  constructor(props){\n    super(props);\n    this.delete = this.delete.bind(this);\n  }\n\n  delete(){\n    axios.get('http://localhost:4000/persons/delete/'+this.props.obj.idPerson)\n    .then(console.log('Deleted'))\n    .catch(err => console.log(err))\n  }\n\n  render() {\n    return (\n        <tr>\n          <td>\n            {this.props.obj.name}\n          </td>\n          <td>\n            {this.props.obj.company}\n          </td>\n          <td>\n            {this.props.obj.age}\n          </td>\n          <td>\n            <Link to={\"/edit/\"+this.props.obj.idPerson} className=\"btn btn-primary\">Edit</Link>\n          </td>\n          <td>\n            <button className=\"btn btn-danger\" onClick={this.delete}>Delete</button>\n          </td>\n        </tr>\n    );\n  }\n}\n\nexport default TableRow;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport TableRow from './TableRow';\nexport default class Index extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeValue = this.onChangeValue.bind(this);\n        this.find = this.find.bind(this);\n        this.state = {\n            persons : [], \n            id : '',\n        };\n    }\n\n    find(){\n        axios.get('http://localhost:4000/persons/find/'+this.state.id)\n        .then(response=>{\n            if(!response.data)\n                this.setState({\n                    persons : response.data\n                });\n            else\n                alert(\"Khong tim thay\");\n        })\n        .catch(err=>{\n            console.log(err);\n        })\n    }\n\n   \n\n    componentDidMount() {\n        axios.get('http://localhost:4000/persons')\n            .then(response => {\n                this.setState({persons: response.data});\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    onChangeValue(e){\n        this.setState({\n            id : e.target.value\n        })\n        console.log(this.state.id);\n    }\n\n    tabRow() {\n        return this.state.persons.map(function (object, i) {\n            return <TableRow obj={object} key={i}/>;\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h3 align=\"center\">Persons List</h3>\n                <input type=\"text\" onChange = {this.onChangeValue}/>\n                <button className=\"btn btn-success\" onClick={this.find}> Tim kiem </button> \n                <table className=\"table table-striped\" style={{marginTop: 20}}>\n                    <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Company</th>\n                        <th>Age</th>\n                        <th colSpan=\"2\">Action</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                        {this.tabRow()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\n\nexport default class NotFound extends Component {\n    render() {\n        return (\n            <div>\n                <p>Not found 404!</p>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Create from './components/create.component';\nimport Edit from './components/edit.component';\nimport Index from './components/index.component';\nimport NotFound from './components/NotFound';\n\nclass App extends Component{\n\n  render(){\n    return(\n      <Router> \n        <div className=\"container\">\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <Link to={'/'} className=\"navbar-brand\">React CRUD Example</Link>\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n              <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                  <Link to={'/'} className=\"nav-link\">Home</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to={'/create'} className=\"nav-link\">Create</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to={'/index'} className=\"nav-link\">Index</Link>\n                </li>\n              </ul>\n            </div>\n          </nav> <br/>\n          <h2>Welcome to React CRUD Tutorial</h2> <br/>\n          <Switch>\n              <Route exact path='/create' component={ Create } />\n              <Route path='/edit/:id' component={ Edit } />\n              <Route path='/index' component={ Index } />\n              <Route component={NotFound}/>\n          </Switch>\n        </div>\n      </Router>\n    ); \n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}